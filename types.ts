export type User = {
  id: number;
  name: string;
  email: string;
  password: string;
  role: string;
};

export type ActionItem = {
  rootCauseId: number;
  subSource: string;
  newVarcharId1: string;
  recommendationLevel: string;
  locationPath: string;
  actionNum: string;
  localActionNum: string;
  obsNum: string;
  sourceID: number;
  source: string;
  referenceID: number;
  item: string;
  assignedToID: number;
  assignedWorkGroupID: number;
  assignedWorkGroupName: string;
  assignedWorkGroupDetail: string;
  targetDate: string;
  newTargetDate: string;
  resetReason: string;
  compDate: string;
  verifiedDate: string;
  directCost: string;
  indirectHours: string;
  createdBy: number;
  createdDate: string;
  updatedBy: number;
  updatedDate: string;
  notifiedDate: string;
  priority: number;
  priorityS: string;
  mgmtResponse: string;
  recommendationLevelID: number;
  completedBy: number;
  verifiedBy: number;
  currencyID: number;
  currencyvthCode: string;
  preventive: string;
  updatedByName: string;
  createdByName: string;
  completedByName: string;
  verifiedByName: string;
  approverID: number;
  isApprovalRequired: boolean;
  isApproved: boolean;
  actionSourceID: number;
  actionSourceDescription: string;
  locationId: number;
  hseCodeId: number;
  hseCodeName: string;
  completeBeforeSubmitForApproval: boolean;
  assignedToUser: string;
  actionItemSource: string;
  abbr: string;
  isVerificationRequired: boolean;
  verificationAssignedToID: number;
  answerID: number;
  repeatAnswerID: number;
  ansSource: string;
  ansSourceID: number;
  ansSubSource: string;
  ansSubSourceID: number;
  reportNum: string;
  reportDescription: string;
  findingDescription: string;
  isPostStartUp: boolean;
  id: number;
};

export interface Credentials {
  email?: string;
  password?: string;
}